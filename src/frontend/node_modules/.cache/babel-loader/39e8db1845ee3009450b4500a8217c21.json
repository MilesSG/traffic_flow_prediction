{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thesis_Revision\\\\Projects_Code\\\\traffic_flow_prediction\\\\src\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Layout, Card, Row, Col, Statistic, Button, Space, Alert, Tag, Divider } from 'antd';\nimport ReactECharts from 'echarts-for-react';\nimport axios from 'axios';\nimport { ArrowUpOutlined, ArrowDownOutlined, ClockCircleOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content\n} = Layout;\nconst App = () => {\n  _s();\n  var _stats$last_24h_chang, _stats$last_24h_chang2;\n  const [trafficData, setTrafficData] = useState({\n    timestamps: [],\n    values: []\n  });\n  const [prediction, setPrediction] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetchData = async () => {\n    try {\n      console.log('Fetching data...');\n      const [dataRes, statsRes, analysisRes] = await Promise.all([axios.get('http://localhost:8000/data/current'), axios.get('http://localhost:8000/stats'), axios.get('http://localhost:8000/analysis')]);\n      console.log('Data response:', dataRes.data);\n      console.log('Stats response:', statsRes.data);\n      console.log('Analysis response:', analysisRes.data);\n      if (!dataRes.data.timestamps || !dataRes.data.values) {\n        throw new Error('Invalid data format received');\n      }\n      setTrafficData(dataRes.data);\n      setStats(statsRes.data);\n      setAnalysis(analysisRes.data);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('获取数据失败，请检查后端服务是否正常运行');\n      setTrafficData({\n        timestamps: [],\n        values: []\n      });\n      setStats(null);\n      setAnalysis(null);\n    }\n  };\n  const getPrediction = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:8000/predict');\n      setPrediction(res.data);\n      // 更新图表数据\n      await fetchData();\n      setError('');\n    } catch (error) {\n      setError('预测失败，请稍后重试');\n      console.error('Error getting prediction:', error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const getChartOption = () => ({\n    title: {\n      text: '实时交通流量数据',\n      left: 'center'\n    },\n    tooltip: {\n      trigger: 'axis',\n      formatter: params => {\n        const time = params[0].axisValue;\n        const value = params[0].data;\n        return `时间：${time}<br/>流量：${value} 辆/小时`;\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: trafficData.timestamps,\n      axisLabel: {\n        rotate: 45,\n        formatter: value => {\n          return value.split(' ')[1]; // 只显示时间部分\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      name: '交通流量（辆/小时）'\n    },\n    series: [{\n      name: '实际流量',\n      type: 'line',\n      data: trafficData.values,\n      smooth: true,\n      lineStyle: {\n        color: '#1890ff',\n        width: 2\n      },\n      areaStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [{\n            offset: 0,\n            color: 'rgba(24,144,255,0.3)'\n          }, {\n            offset: 1,\n            color: 'rgba(24,144,255,0.1)'\n          }]\n        }\n      }\n    }, prediction ? {\n      name: '预测流量',\n      type: 'line',\n      data: [...Array(trafficData.values.length - 1).fill(null), prediction.predicted_value],\n      lineStyle: {\n        type: 'dashed',\n        color: '#52c41a'\n      },\n      symbol: 'circle',\n      symbolSize: 8\n    } : {}]\n  });\n  const getHourlyTrendOption = () => {\n    if (!(stats !== null && stats !== void 0 && stats.hourly_trend)) return {};\n    const hours = Object.keys(stats.hourly_trend);\n    const values = Object.values(stats.hourly_trend);\n    return {\n      title: {\n        text: '24小时流量趋势',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        type: 'category',\n        data: hours.map(h => `${h}:00`),\n        name: '小时'\n      },\n      yAxis: {\n        type: 'value',\n        name: '平均流量'\n      },\n      series: [{\n        data: values,\n        type: 'bar',\n        name: '平均流量',\n        itemStyle: {\n          color: '#1890ff'\n        }\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        background: '#fff',\n        padding: '0 20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#1890ff'\n        },\n        children: \"\\u4EA4\\u901A\\u6D41\\u91CF\\u9884\\u6D4B\\u7CFB\\u7EDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        padding: '20px'\n      },\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        message: error,\n        type: \"error\",\n        showIcon: true,\n        style: {\n          marginBottom: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        size: \"large\",\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u5E73\\u5747\\u6D41\\u91CF\",\n                value: stats === null || stats === void 0 ? void 0 : stats.mean.toFixed(2),\n                precision: 2,\n                suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u6700\\u5927\\u6D41\\u91CF\",\n                value: stats === null || stats === void 0 ? void 0 : stats.max,\n                valueStyle: {\n                  color: '#3f8600'\n                },\n                prefix: /*#__PURE__*/_jsxDEV(ArrowUpOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 27\n                }, this),\n                suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u6700\\u5C0F\\u6D41\\u91CF\",\n                value: stats === null || stats === void 0 ? void 0 : stats.min,\n                valueStyle: {\n                  color: '#cf1322'\n                },\n                prefix: /*#__PURE__*/_jsxDEV(ArrowDownOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 27\n                }, this),\n                suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"24\\u5C0F\\u65F6\\u53D8\\u5316\\u7387\",\n                value: stats === null || stats === void 0 ? void 0 : stats.last_24h_change,\n                precision: 2,\n                valueStyle: {\n                  color: ((_stats$last_24h_chang = stats === null || stats === void 0 ? void 0 : stats.last_24h_change) !== null && _stats$last_24h_chang !== void 0 ? _stats$last_24h_chang : 0) >= 0 ? '#3f8600' : '#cf1322'\n                },\n                prefix: ((_stats$last_24h_chang2 = stats === null || stats === void 0 ? void 0 : stats.last_24h_change) !== null && _stats$last_24h_chang2 !== void 0 ? _stats$last_24h_chang2 : 0) >= 0 ? /*#__PURE__*/_jsxDEV(ArrowUpOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 64\n                }, this) : /*#__PURE__*/_jsxDEV(ArrowDownOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 86\n                }, this),\n                suffix: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 16,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"\\u4EA4\\u901A\\u6D41\\u91CF\\u5B9E\\u65F6\\u76D1\\u6D4B\",\n              extra: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: getPrediction,\n                loading: loading,\n                children: \"\\u9884\\u6D4B\\u4E0B\\u4E00\\u5C0F\\u65F6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ReactECharts, {\n                option: getChartOption(),\n                style: {\n                  height: '400px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"\\u4EA4\\u901A\\u6D41\\u91CF\\u5206\\u6790\",\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                direction: \"vertical\",\n                style: {\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u5DE5\\u4F5C\\u65E5\\u5E73\\u5747\\u6D41\\u91CF\",\n                  value: analysis === null || analysis === void 0 ? void 0 : analysis.weekday_avg.toFixed(2),\n                  suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u5468\\u672B\\u5E73\\u5747\\u6D41\\u91CF\",\n                  value: analysis === null || analysis === void 0 ? void 0 : analysis.weekend_avg.toFixed(2),\n                  suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u65E9\\u9AD8\\u5CF0\\u6D41\\u91CF (7:00-9:00)\",\n                  value: analysis === null || analysis === void 0 ? void 0 : analysis.morning_peak_avg.toFixed(2),\n                  suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u665A\\u9AD8\\u5CF0\\u6D41\\u91CF (17:00-19:00)\",\n                  value: analysis === null || analysis === void 0 ? void 0 : analysis.evening_peak_avg.toFixed(2),\n                  suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                  color: \"blue\",\n                  style: {\n                    marginTop: 16\n                  },\n                  children: [\"\\u65E5\\u6D41\\u91CF\\u6A21\\u5F0F: \", analysis === null || analysis === void 0 ? void 0 : analysis.daily_pattern]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"24\\u5C0F\\u65F6\\u6D41\\u91CF\\u8D8B\\u52BF\",\n              children: /*#__PURE__*/_jsxDEV(ReactECharts, {\n                option: getHourlyTrendOption(),\n                style: {\n                  height: '300px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), prediction && /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\u9884\\u6D4B\\u7ED3\\u679C\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 16,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u9884\\u6D4B\\u65F6\\u95F4\",\n                value: prediction.timestamp,\n                prefix: /*#__PURE__*/_jsxDEV(ClockCircleOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u9884\\u6D4B\\u6D41\\u91CF\",\n                value: prediction.predicted_value,\n                precision: 2,\n                suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u76F8\\u5BF9\\u5F53\\u524D\\u53D8\\u5316\",\n                value: ((prediction.predicted_value - trafficData.values[trafficData.values.length - 1]) / trafficData.values[trafficData.values.length - 1] * 100).toFixed(2),\n                precision: 2,\n                prefix: prediction.predicted_value >= trafficData.values[trafficData.values.length - 1] ? /*#__PURE__*/_jsxDEV(ArrowUpOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 111\n                }, this) : /*#__PURE__*/_jsxDEV(ArrowDownOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 133\n                }, this),\n                valueStyle: {\n                  color: prediction.predicted_value >= trafficData.values[trafficData.values.length - 1] ? '#3f8600' : '#cf1322'\n                },\n                suffix: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QVIlH7MuYj5rW+ZCs74v5fipNt0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Layout","Card","Row","Col","Statistic","Button","Space","Alert","Tag","Divider","ReactECharts","axios","ArrowUpOutlined","ArrowDownOutlined","ClockCircleOutlined","jsxDEV","_jsxDEV","Header","Content","App","_s","_stats$last_24h_chang","_stats$last_24h_chang2","trafficData","setTrafficData","timestamps","values","prediction","setPrediction","stats","setStats","analysis","setAnalysis","loading","setLoading","error","setError","fetchData","console","log","dataRes","statsRes","analysisRes","Promise","all","get","data","Error","getPrediction","res","interval","setInterval","clearInterval","getChartOption","title","text","left","tooltip","trigger","formatter","params","time","axisValue","value","xAxis","type","axisLabel","rotate","split","yAxis","name","series","smooth","lineStyle","color","width","areaStyle","x","y","x2","y2","colorStops","offset","Array","length","fill","predicted_value","symbol","symbolSize","getHourlyTrendOption","hourly_trend","hours","Object","keys","map","h","itemStyle","style","minHeight","children","background","padding","fileName","_jsxFileName","lineNumber","columnNumber","message","showIcon","marginBottom","direction","size","gutter","span","mean","toFixed","precision","suffix","max","valueStyle","prefix","min","last_24h_change","extra","onClick","option","height","weekday_avg","weekend_avg","morning_peak_avg","evening_peak_avg","marginTop","daily_pattern","timestamp","_c","$RefreshReg$"],"sources":["D:/Thesis_Revision/Projects_Code/traffic_flow_prediction/src/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Layout, Card, Row, Col, Statistic, Button, Space, Alert, Spin, Table, Tag, Divider } from 'antd';\r\nimport ReactECharts from 'echarts-for-react';\r\nimport axios from 'axios';\r\nimport { ArrowUpOutlined, ArrowDownOutlined, ClockCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\ninterface TrafficData {\r\n  timestamps: string[];\r\n  values: number[];\r\n}\r\n\r\ninterface PredictionData {\r\n  timestamp: string;\r\n  predicted_value: number;\r\n}\r\n\r\ninterface Stats {\r\n  mean: number;\r\n  max: number;\r\n  min: number;\r\n  std: number;\r\n  peak_hour: number;\r\n  off_peak_hour: number;\r\n  hourly_trend: Record<string, number>;\r\n  last_24h_change: number;\r\n}\r\n\r\ninterface Analysis {\r\n  weekday_avg: number;\r\n  weekend_avg: number;\r\n  morning_peak_avg: number;\r\n  evening_peak_avg: number;\r\n  peak_ratio: number;\r\n  daily_pattern: string;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [trafficData, setTrafficData] = useState<TrafficData>({ timestamps: [], values: [] });\r\n  const [prediction, setPrediction] = useState<PredictionData | null>(null);\r\n  const [stats, setStats] = useState<Stats | null>(null);\r\n  const [analysis, setAnalysis] = useState<Analysis | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      console.log('Fetching data...');\r\n      const [dataRes, statsRes, analysisRes] = await Promise.all([\r\n        axios.get('http://localhost:8000/data/current'),\r\n        axios.get('http://localhost:8000/stats'),\r\n        axios.get('http://localhost:8000/analysis')\r\n      ]);\r\n      console.log('Data response:', dataRes.data);\r\n      console.log('Stats response:', statsRes.data);\r\n      console.log('Analysis response:', analysisRes.data);\r\n      \r\n      if (!dataRes.data.timestamps || !dataRes.data.values) {\r\n        throw new Error('Invalid data format received');\r\n      }\r\n      \r\n      setTrafficData(dataRes.data);\r\n      setStats(statsRes.data);\r\n      setAnalysis(analysisRes.data);\r\n      setError('');\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError('获取数据失败，请检查后端服务是否正常运行');\r\n      setTrafficData({ timestamps: [], values: [] });\r\n      setStats(null);\r\n      setAnalysis(null);\r\n    }\r\n  };\r\n\r\n  const getPrediction = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get('http://localhost:8000/predict');\r\n      setPrediction(res.data);\r\n      // 更新图表数据\r\n      await fetchData();\r\n      setError('');\r\n    } catch (error) {\r\n      setError('预测失败，请稍后重试');\r\n      console.error('Error getting prediction:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getChartOption = () => ({\r\n    title: {\r\n      text: '实时交通流量数据',\r\n      left: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      formatter: (params: any) => {\r\n        const time = params[0].axisValue;\r\n        const value = params[0].data;\r\n        return `时间：${time}<br/>流量：${value} 辆/小时`;\r\n      }\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: trafficData.timestamps,\r\n      axisLabel: {\r\n        rotate: 45,\r\n        formatter: (value: string) => {\r\n          return value.split(' ')[1];  // 只显示时间部分\r\n        }\r\n      }\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      name: '交通流量（辆/小时）'\r\n    },\r\n    series: [\r\n      {\r\n        name: '实际流量',\r\n        type: 'line',\r\n        data: trafficData.values,\r\n        smooth: true,\r\n        lineStyle: {\r\n          color: '#1890ff',\r\n          width: 2\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: 'linear',\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [{\r\n              offset: 0,\r\n              color: 'rgba(24,144,255,0.3)'\r\n            }, {\r\n              offset: 1,\r\n              color: 'rgba(24,144,255,0.1)'\r\n            }]\r\n          }\r\n        }\r\n      },\r\n      prediction ? {\r\n        name: '预测流量',\r\n        type: 'line',\r\n        data: [...Array(trafficData.values.length - 1).fill(null), prediction.predicted_value],\r\n        lineStyle: {\r\n          type: 'dashed',\r\n          color: '#52c41a'\r\n        },\r\n        symbol: 'circle',\r\n        symbolSize: 8\r\n      } : {}\r\n    ]\r\n  });\r\n\r\n  const getHourlyTrendOption = () => {\r\n    if (!stats?.hourly_trend) return {};\r\n    \r\n    const hours = Object.keys(stats.hourly_trend);\r\n    const values = Object.values(stats.hourly_trend);\r\n    \r\n    return {\r\n      title: {\r\n        text: '24小时流量趋势',\r\n        left: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: hours.map(h => `${h}:00`),\r\n        name: '小时'\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '平均流量'\r\n      },\r\n      series: [{\r\n        data: values,\r\n        type: 'bar',\r\n        name: '平均流量',\r\n        itemStyle: {\r\n          color: '#1890ff'\r\n        }\r\n      }]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Header style={{ background: '#fff', padding: '0 20px' }}>\r\n        <h1 style={{ color: '#1890ff' }}>交通流量预测系统</h1>\r\n      </Header>\r\n      <Content style={{ padding: '20px' }}>\r\n        {error && <Alert message={error} type=\"error\" showIcon style={{ marginBottom: 20 }} />}\r\n        \r\n        <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n          <Row gutter={16}>\r\n            <Col span={6}>\r\n              <Card>\r\n                <Statistic\r\n                  title=\"平均流量\"\r\n                  value={stats?.mean.toFixed(2)}\r\n                  precision={2}\r\n                  suffix=\"辆/小时\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Card>\r\n                <Statistic\r\n                  title=\"最大流量\"\r\n                  value={stats?.max}\r\n                  valueStyle={{ color: '#3f8600' }}\r\n                  prefix={<ArrowUpOutlined />}\r\n                  suffix=\"辆/小时\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Card>\r\n                <Statistic\r\n                  title=\"最小流量\"\r\n                  value={stats?.min}\r\n                  valueStyle={{ color: '#cf1322' }}\r\n                  prefix={<ArrowDownOutlined />}\r\n                  suffix=\"辆/小时\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Card>\r\n                <Statistic\r\n                  title=\"24小时变化率\"\r\n                  value={stats?.last_24h_change}\r\n                  precision={2}\r\n                  valueStyle={{ color: (stats?.last_24h_change ?? 0) >= 0 ? '#3f8600' : '#cf1322' }}\r\n                  prefix={(stats?.last_24h_change ?? 0) >= 0 ? <ArrowUpOutlined /> : <ArrowDownOutlined />}\r\n                  suffix=\"%\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={16}>\r\n              <Card\r\n                title=\"交通流量实时监测\"\r\n                extra={\r\n                  <Button type=\"primary\" onClick={getPrediction} loading={loading}>\r\n                    预测下一小时\r\n                  </Button>\r\n                }\r\n              >\r\n                <ReactECharts\r\n                  option={getChartOption()}\r\n                  style={{ height: '400px' }}\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Card title=\"交通流量分析\">\r\n                <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n                  <Statistic\r\n                    title=\"工作日平均流量\"\r\n                    value={analysis?.weekday_avg.toFixed(2)}\r\n                    suffix=\"辆/小时\"\r\n                  />\r\n                  <Statistic\r\n                    title=\"周末平均流量\"\r\n                    value={analysis?.weekend_avg.toFixed(2)}\r\n                    suffix=\"辆/小时\"\r\n                  />\r\n                  <Divider />\r\n                  <Statistic\r\n                    title=\"早高峰流量 (7:00-9:00)\"\r\n                    value={analysis?.morning_peak_avg.toFixed(2)}\r\n                    suffix=\"辆/小时\"\r\n                  />\r\n                  <Statistic\r\n                    title=\"晚高峰流量 (17:00-19:00)\"\r\n                    value={analysis?.evening_peak_avg.toFixed(2)}\r\n                    suffix=\"辆/小时\"\r\n                  />\r\n                  <Tag color=\"blue\" style={{ marginTop: 16 }}>\r\n                    日流量模式: {analysis?.daily_pattern}\r\n                  </Tag>\r\n                </Space>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Card title=\"24小时流量趋势\">\r\n                <ReactECharts\r\n                  option={getHourlyTrendOption()}\r\n                  style={{ height: '300px' }}\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          {prediction && (\r\n            <Card title=\"预测结果\">\r\n              <Row gutter={16}>\r\n                <Col span={8}>\r\n                  <Statistic\r\n                    title=\"预测时间\"\r\n                    value={prediction.timestamp}\r\n                    prefix={<ClockCircleOutlined />}\r\n                  />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Statistic\r\n                    title=\"预测流量\"\r\n                    value={prediction.predicted_value}\r\n                    precision={2}\r\n                    suffix=\"辆/小时\"\r\n                  />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Statistic\r\n                    title=\"相对当前变化\"\r\n                    value={((prediction.predicted_value - trafficData.values[trafficData.values.length - 1]) / trafficData.values[trafficData.values.length - 1] * 100).toFixed(2)}\r\n                    precision={2}\r\n                    prefix={prediction.predicted_value >= trafficData.values[trafficData.values.length - 1] ? <ArrowUpOutlined /> : <ArrowDownOutlined />}\r\n                    valueStyle={{ color: prediction.predicted_value >= trafficData.values[trafficData.values.length - 1] ? '#3f8600' : '#cf1322' }}\r\n                    suffix=\"%\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          )}\r\n        </Space>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}