{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thesis_Revision\\\\Projects_Code\\\\traffic_flow_prediction\\\\src\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { Layout, Card, Row, Col, Statistic, Button, Space, Alert, Badge, Tooltip, Divider, Tag } from 'antd';\nimport ReactECharts from 'echarts-for-react';\nimport { ArrowUpOutlined, ArrowDownOutlined, ClockCircleOutlined, SyncOutlined } from '@ant-design/icons';\nimport { generateTrafficData, predictNextHour, calculateStats, calculateAnalysis } from './utils/trafficUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content\n} = Layout;\nconst REFRESH_INTERVAL = 5000; // 5秒刷新一次\n\nconst App = () => {\n  _s();\n  var _stats$last_24h_chang, _stats$last_24h_chang2;\n  const [trafficData, setTrafficData] = useState({\n    timestamps: [],\n    values: []\n  });\n  const [prediction, setPrediction] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [lastUpdateTime, setLastUpdateTime] = useState(new Date());\n  const [chartInstance, setChartInstance] = useState(null);\n  const fetchData = useCallback(() => {\n    try {\n      // 生成模拟数据\n      const data = generateTrafficData(100);\n\n      // 平滑更新数据\n      if (chartInstance) {\n        const series = chartInstance.getOption().series;\n        series[0].data = data.values;\n        chartInstance.setOption({\n          xAxis: {\n            data: data.timestamps\n          },\n          series: series\n        }, {\n          animation: true,\n          animationDuration: 1000,\n          animationEasing: 'quadraticInOut'\n        });\n      }\n      setTrafficData(data);\n\n      // 计算统计信息\n      const statsData = calculateStats(data);\n      setStats(statsData);\n\n      // 计算分析信息\n      const analysisData = calculateAnalysis(data);\n      setAnalysis(analysisData);\n      setLastUpdateTime(new Date());\n      setError('');\n    } catch (error) {\n      console.error('Error generating data:', error);\n      setError('生成数据时发生错误');\n    }\n  }, [chartInstance]);\n  const getPrediction = () => {\n    setLoading(true);\n    try {\n      const predictionResult = predictNextHour(trafficData);\n      setPrediction(predictionResult);\n\n      // 更新图表数据\n      const newData = {\n        timestamps: [...trafficData.timestamps, predictionResult.timestamp],\n        values: [...trafficData.values, predictionResult.predicted_value]\n      };\n      setTrafficData(newData);\n\n      // 更新统计信息\n      const statsData = calculateStats(newData);\n      setStats(statsData);\n\n      // 更新分析信息\n      const analysisData = calculateAnalysis(newData);\n      setAnalysis(analysisData);\n      setError('');\n    } catch (error) {\n      setError('预测失败，请稍后重试');\n      console.error('Error getting prediction:', error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, [fetchData]);\n  const getChartOption = () => ({\n    title: {\n      text: '实时交通流量数据',\n      left: 'center',\n      subtext: `上次更新: ${lastUpdateTime.toLocaleTimeString()}`\n    },\n    tooltip: {\n      trigger: 'axis',\n      formatter: params => {\n        const time = new Date(params[0].axisValue).toLocaleString();\n        const value = params[0].data;\n        return `时间：${time}<br/>流量：${value} 辆/小时`;\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: trafficData.timestamps,\n      axisLabel: {\n        formatter: value => {\n          return new Date(value).toLocaleTimeString();\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      name: '交通流量（辆/小时）',\n      animation: true\n    },\n    series: [{\n      name: '实际流量',\n      type: 'line',\n      data: trafficData.values,\n      smooth: true,\n      lineStyle: {\n        color: '#1890ff',\n        width: 2\n      },\n      areaStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [{\n            offset: 0,\n            color: 'rgba(24,144,255,0.3)'\n          }, {\n            offset: 1,\n            color: 'rgba(24,144,255,0.1)'\n          }]\n        }\n      },\n      animation: true,\n      animationDuration: 1000,\n      animationEasing: 'quadraticInOut'\n    }, prediction ? {\n      name: '预测流量',\n      type: 'line',\n      data: [...Array(trafficData.values.length - 1).fill(null), prediction.predicted_value],\n      lineStyle: {\n        type: 'dashed',\n        color: '#52c41a'\n      },\n      symbol: 'circle',\n      symbolSize: 8\n    } : {}]\n  });\n  const getHourlyTrendOption = () => {\n    if (!(stats !== null && stats !== void 0 && stats.hourly_trend)) return {};\n    const hours = Object.keys(stats.hourly_trend);\n    const values = Object.values(stats.hourly_trend);\n    return {\n      title: {\n        text: '24小时流量趋势',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        type: 'category',\n        data: hours.map(h => `${h}:00`),\n        name: '小时'\n      },\n      yAxis: {\n        type: 'value',\n        name: '平均流量'\n      },\n      series: [{\n        data: values,\n        type: 'bar',\n        name: '平均流量',\n        itemStyle: {\n          color: '#1890ff'\n        }\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        background: '#fff',\n        padding: '0 20px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#1890ff',\n          margin: 0\n        },\n        children: \"\\u4EA4\\u901A\\u6D41\\u91CF\\u9884\\u6D4B\\u7CFB\\u7EDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: `每${REFRESH_INTERVAL / 1000}秒自动更新`,\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            status: \"processing\",\n            text: /*#__PURE__*/_jsxDEV(Space, {\n              children: [/*#__PURE__*/_jsxDEV(SyncOutlined, {\n                spin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), \"\\u5B9E\\u65F6\\u66F4\\u65B0\\u4E2D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        padding: '20px'\n      },\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        message: error,\n        type: \"error\",\n        showIcon: true,\n        style: {\n          marginBottom: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        size: \"large\",\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u5E73\\u5747\\u6D41\\u91CF\",\n                value: stats === null || stats === void 0 ? void 0 : stats.mean.toFixed(2),\n                precision: 2,\n                suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u6700\\u5927\\u6D41\\u91CF\",\n                value: stats === null || stats === void 0 ? void 0 : stats.max,\n                valueStyle: {\n                  color: '#3f8600'\n                },\n                prefix: /*#__PURE__*/_jsxDEV(ArrowUpOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 27\n                }, this),\n                suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u6700\\u5C0F\\u6D41\\u91CF\",\n                value: stats === null || stats === void 0 ? void 0 : stats.min,\n                valueStyle: {\n                  color: '#cf1322'\n                },\n                prefix: /*#__PURE__*/_jsxDEV(ArrowDownOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 27\n                }, this),\n                suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"24\\u5C0F\\u65F6\\u53D8\\u5316\\u7387\",\n                value: stats === null || stats === void 0 ? void 0 : stats.last_24h_change,\n                precision: 2,\n                valueStyle: {\n                  color: ((_stats$last_24h_chang = stats === null || stats === void 0 ? void 0 : stats.last_24h_change) !== null && _stats$last_24h_chang !== void 0 ? _stats$last_24h_chang : 0) >= 0 ? '#3f8600' : '#cf1322'\n                },\n                prefix: ((_stats$last_24h_chang2 = stats === null || stats === void 0 ? void 0 : stats.last_24h_change) !== null && _stats$last_24h_chang2 !== void 0 ? _stats$last_24h_chang2 : 0) >= 0 ? /*#__PURE__*/_jsxDEV(ArrowUpOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 64\n                }, this) : /*#__PURE__*/_jsxDEV(ArrowDownOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 86\n                }, this),\n                suffix: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 16,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"\\u4EA4\\u901A\\u6D41\\u91CF\\u5B9E\\u65F6\\u76D1\\u6D4B\",\n              extra: /*#__PURE__*/_jsxDEV(Space, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '12px',\n                    color: '#999'\n                  },\n                  children: [\"\\u4E0A\\u6B21\\u66F4\\u65B0: \", lastUpdateTime.toLocaleTimeString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  onClick: getPrediction,\n                  loading: loading,\n                  children: \"\\u9884\\u6D4B\\u4E0B\\u4E00\\u5C0F\\u65F6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ReactECharts, {\n                option: getChartOption(),\n                style: {\n                  height: '400px'\n                },\n                onChartReady: chart => setChartInstance(chart)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"\\u4EA4\\u901A\\u6D41\\u91CF\\u5206\\u6790\",\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                direction: \"vertical\",\n                style: {\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u5DE5\\u4F5C\\u65E5\\u5E73\\u5747\\u6D41\\u91CF\",\n                  value: analysis === null || analysis === void 0 ? void 0 : analysis.weekday_avg.toFixed(2),\n                  suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u5468\\u672B\\u5E73\\u5747\\u6D41\\u91CF\",\n                  value: analysis === null || analysis === void 0 ? void 0 : analysis.weekend_avg.toFixed(2),\n                  suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u65E9\\u9AD8\\u5CF0\\u6D41\\u91CF (7:00-9:00)\",\n                  value: analysis === null || analysis === void 0 ? void 0 : analysis.morning_peak_avg.toFixed(2),\n                  suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u665A\\u9AD8\\u5CF0\\u6D41\\u91CF (17:00-19:00)\",\n                  value: analysis === null || analysis === void 0 ? void 0 : analysis.evening_peak_avg.toFixed(2),\n                  suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                  color: \"blue\",\n                  style: {\n                    marginTop: 16\n                  },\n                  children: [\"\\u65E5\\u6D41\\u91CF\\u6A21\\u5F0F: \", analysis === null || analysis === void 0 ? void 0 : analysis.daily_pattern]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"24\\u5C0F\\u65F6\\u6D41\\u91CF\\u8D8B\\u52BF\",\n              children: /*#__PURE__*/_jsxDEV(ReactECharts, {\n                option: getHourlyTrendOption(),\n                style: {\n                  height: '300px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), prediction && /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\u9884\\u6D4B\\u7ED3\\u679C\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 16,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u9884\\u6D4B\\u65F6\\u95F4\",\n                value: prediction.timestamp,\n                prefix: /*#__PURE__*/_jsxDEV(ClockCircleOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u9884\\u6D4B\\u6D41\\u91CF\",\n                value: prediction.predicted_value,\n                precision: 2,\n                suffix: \"\\u8F86/\\u5C0F\\u65F6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Statistic, {\n                title: \"\\u76F8\\u5BF9\\u5F53\\u524D\\u53D8\\u5316\",\n                value: ((prediction.predicted_value - trafficData.values[trafficData.values.length - 1]) / trafficData.values[trafficData.values.length - 1] * 100).toFixed(2),\n                precision: 2,\n                prefix: prediction.predicted_value >= trafficData.values[trafficData.values.length - 1] ? /*#__PURE__*/_jsxDEV(ArrowUpOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 111\n                }, this) : /*#__PURE__*/_jsxDEV(ArrowDownOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 133\n                }, this),\n                valueStyle: {\n                  color: prediction.predicted_value >= trafficData.values[trafficData.values.length - 1] ? '#3f8600' : '#cf1322'\n                },\n                suffix: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CPQBjhTzMxL4MNJXlOv7PjrPUEw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Layout","Card","Row","Col","Statistic","Button","Space","Alert","Badge","Tooltip","Divider","Tag","ReactECharts","ArrowUpOutlined","ArrowDownOutlined","ClockCircleOutlined","SyncOutlined","generateTrafficData","predictNextHour","calculateStats","calculateAnalysis","jsxDEV","_jsxDEV","Header","Content","REFRESH_INTERVAL","App","_s","_stats$last_24h_chang","_stats$last_24h_chang2","trafficData","setTrafficData","timestamps","values","prediction","setPrediction","stats","setStats","analysis","setAnalysis","loading","setLoading","error","setError","lastUpdateTime","setLastUpdateTime","Date","chartInstance","setChartInstance","fetchData","data","series","getOption","setOption","xAxis","animation","animationDuration","animationEasing","statsData","analysisData","console","getPrediction","predictionResult","newData","timestamp","predicted_value","interval","setInterval","clearInterval","getChartOption","title","text","left","subtext","toLocaleTimeString","tooltip","trigger","formatter","params","time","axisValue","toLocaleString","value","type","axisLabel","yAxis","name","smooth","lineStyle","color","width","areaStyle","x","y","x2","y2","colorStops","offset","Array","length","fill","symbol","symbolSize","getHourlyTrendOption","hourly_trend","hours","Object","keys","map","h","itemStyle","style","minHeight","children","background","padding","display","alignItems","justifyContent","margin","fileName","_jsxFileName","lineNumber","columnNumber","status","spin","message","showIcon","marginBottom","direction","size","gutter","span","mean","toFixed","precision","suffix","max","valueStyle","prefix","min","last_24h_change","extra","fontSize","onClick","option","height","onChartReady","chart","weekday_avg","weekend_avg","morning_peak_avg","evening_peak_avg","marginTop","daily_pattern","_c","$RefreshReg$"],"sources":["D:/Thesis_Revision/Projects_Code/traffic_flow_prediction/src/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Layout, Card, Row, Col, Statistic, Button, Space, Alert, Badge, Tooltip, Divider, Tag } from 'antd';\r\nimport ReactECharts from 'echarts-for-react';\r\nimport { ArrowUpOutlined, ArrowDownOutlined, ClockCircleOutlined, SyncOutlined } from '@ant-design/icons';\r\nimport { generateTrafficData, predictNextHour, calculateStats, calculateAnalysis } from './utils/trafficUtils';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\ninterface TrafficData {\r\n  timestamps: string[];\r\n  values: number[];\r\n}\r\n\r\ninterface PredictionData {\r\n  timestamp: string;\r\n  predicted_value: number;\r\n}\r\n\r\ninterface Stats {\r\n  mean: number;\r\n  max: number;\r\n  min: number;\r\n  std: number;\r\n  peak_hour: number;\r\n  off_peak_hour: number;\r\n  hourly_trend: Record<string, number>;\r\n  last_24h_change: number;\r\n}\r\n\r\ninterface Analysis {\r\n  weekday_avg: number;\r\n  weekend_avg: number;\r\n  morning_peak_avg: number;\r\n  evening_peak_avg: number;\r\n  peak_ratio: number;\r\n  daily_pattern: string;\r\n}\r\n\r\nconst REFRESH_INTERVAL = 5000; // 5秒刷新一次\r\n\r\nconst App: React.FC = () => {\r\n  const [trafficData, setTrafficData] = useState<TrafficData>({ timestamps: [], values: [] });\r\n  const [prediction, setPrediction] = useState<PredictionData | null>(null);\r\n  const [stats, setStats] = useState<Stats | null>(null);\r\n  const [analysis, setAnalysis] = useState<Analysis | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n  const [lastUpdateTime, setLastUpdateTime] = useState<Date>(new Date());\r\n  const [chartInstance, setChartInstance] = useState<any>(null);\r\n\r\n  const fetchData = useCallback(() => {\r\n    try {\r\n      // 生成模拟数据\r\n      const data = generateTrafficData(100);\r\n      \r\n      // 平滑更新数据\r\n      if (chartInstance) {\r\n        const series = chartInstance.getOption().series;\r\n        series[0].data = data.values;\r\n        chartInstance.setOption({\r\n          xAxis: {\r\n            data: data.timestamps\r\n          },\r\n          series: series\r\n        }, {\r\n          animation: true,\r\n          animationDuration: 1000,\r\n          animationEasing: 'quadraticInOut'\r\n        });\r\n      }\r\n      \r\n      setTrafficData(data);\r\n      \r\n      // 计算统计信息\r\n      const statsData = calculateStats(data);\r\n      setStats(statsData);\r\n      \r\n      // 计算分析信息\r\n      const analysisData = calculateAnalysis(data);\r\n      setAnalysis(analysisData);\r\n      \r\n      setLastUpdateTime(new Date());\r\n      setError('');\r\n    } catch (error) {\r\n      console.error('Error generating data:', error);\r\n      setError('生成数据时发生错误');\r\n    }\r\n  }, [chartInstance]);\r\n\r\n  const getPrediction = () => {\r\n    setLoading(true);\r\n    try {\r\n      const predictionResult = predictNextHour(trafficData);\r\n      setPrediction(predictionResult);\r\n      \r\n      // 更新图表数据\r\n      const newData = {\r\n        timestamps: [...trafficData.timestamps, predictionResult.timestamp],\r\n        values: [...trafficData.values, predictionResult.predicted_value]\r\n      };\r\n      setTrafficData(newData);\r\n      \r\n      // 更新统计信息\r\n      const statsData = calculateStats(newData);\r\n      setStats(statsData);\r\n      \r\n      // 更新分析信息\r\n      const analysisData = calculateAnalysis(newData);\r\n      setAnalysis(analysisData);\r\n      \r\n      setError('');\r\n    } catch (error) {\r\n      setError('预测失败，请稍后重试');\r\n      console.error('Error getting prediction:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const interval = setInterval(fetchData, REFRESH_INTERVAL);\r\n    return () => clearInterval(interval);\r\n  }, [fetchData]);\r\n\r\n  const getChartOption = () => ({\r\n    title: {\r\n      text: '实时交通流量数据',\r\n      left: 'center',\r\n      subtext: `上次更新: ${lastUpdateTime.toLocaleTimeString()}`\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      formatter: (params: any) => {\r\n        const time = new Date(params[0].axisValue).toLocaleString();\r\n        const value = params[0].data;\r\n        return `时间：${time}<br/>流量：${value} 辆/小时`;\r\n      }\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: trafficData.timestamps,\r\n      axisLabel: {\r\n        formatter: (value: string) => {\r\n          return new Date(value).toLocaleTimeString();\r\n        }\r\n      }\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      name: '交通流量（辆/小时）',\r\n      animation: true\r\n    },\r\n    series: [\r\n      {\r\n        name: '实际流量',\r\n        type: 'line',\r\n        data: trafficData.values,\r\n        smooth: true,\r\n        lineStyle: {\r\n          color: '#1890ff',\r\n          width: 2\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: 'linear',\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [{\r\n              offset: 0,\r\n              color: 'rgba(24,144,255,0.3)'\r\n            }, {\r\n              offset: 1,\r\n              color: 'rgba(24,144,255,0.1)'\r\n            }]\r\n          }\r\n        },\r\n        animation: true,\r\n        animationDuration: 1000,\r\n        animationEasing: 'quadraticInOut'\r\n      },\r\n      prediction ? {\r\n        name: '预测流量',\r\n        type: 'line',\r\n        data: [...Array(trafficData.values.length - 1).fill(null), prediction.predicted_value],\r\n        lineStyle: {\r\n          type: 'dashed',\r\n          color: '#52c41a'\r\n        },\r\n        symbol: 'circle',\r\n        symbolSize: 8\r\n      } : {}\r\n    ]\r\n  });\r\n\r\n  const getHourlyTrendOption = () => {\r\n    if (!stats?.hourly_trend) return {};\r\n    \r\n    const hours = Object.keys(stats.hourly_trend);\r\n    const values = Object.values(stats.hourly_trend);\r\n    \r\n    return {\r\n      title: {\r\n        text: '24小时流量趋势',\r\n        left: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: hours.map(h => `${h}:00`),\r\n        name: '小时'\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '平均流量'\r\n      },\r\n      series: [{\r\n        data: values,\r\n        type: 'bar',\r\n        name: '平均流量',\r\n        itemStyle: {\r\n          color: '#1890ff'\r\n        }\r\n      }]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Header style={{ background: '#fff', padding: '0 20px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n        <h1 style={{ color: '#1890ff', margin: 0 }}>交通流量预测系统</h1>\r\n        <Space>\r\n          <Tooltip title={`每${REFRESH_INTERVAL/1000}秒自动更新`}>\r\n            <Badge status=\"processing\" text={\r\n              <Space>\r\n                <SyncOutlined spin />\r\n                实时更新中\r\n              </Space>\r\n            } />\r\n          </Tooltip>\r\n        </Space>\r\n      </Header>\r\n      <Content style={{ padding: '20px' }}>\r\n        {error && <Alert message={error} type=\"error\" showIcon style={{ marginBottom: 20 }} />}\r\n        \r\n        <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n          <Row gutter={16}>\r\n            <Col span={6}>\r\n              <Card>\r\n                <Statistic\r\n                  title=\"平均流量\"\r\n                  value={stats?.mean.toFixed(2)}\r\n                  precision={2}\r\n                  suffix=\"辆/小时\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Card>\r\n                <Statistic\r\n                  title=\"最大流量\"\r\n                  value={stats?.max}\r\n                  valueStyle={{ color: '#3f8600' }}\r\n                  prefix={<ArrowUpOutlined />}\r\n                  suffix=\"辆/小时\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Card>\r\n                <Statistic\r\n                  title=\"最小流量\"\r\n                  value={stats?.min}\r\n                  valueStyle={{ color: '#cf1322' }}\r\n                  prefix={<ArrowDownOutlined />}\r\n                  suffix=\"辆/小时\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Card>\r\n                <Statistic\r\n                  title=\"24小时变化率\"\r\n                  value={stats?.last_24h_change}\r\n                  precision={2}\r\n                  valueStyle={{ color: (stats?.last_24h_change ?? 0) >= 0 ? '#3f8600' : '#cf1322' }}\r\n                  prefix={(stats?.last_24h_change ?? 0) >= 0 ? <ArrowUpOutlined /> : <ArrowDownOutlined />}\r\n                  suffix=\"%\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={16}>\r\n              <Card\r\n                title=\"交通流量实时监测\"\r\n                extra={\r\n                  <Space>\r\n                    <span style={{ fontSize: '12px', color: '#999' }}>\r\n                      上次更新: {lastUpdateTime.toLocaleTimeString()}\r\n                    </span>\r\n                    <Button type=\"primary\" onClick={getPrediction} loading={loading}>\r\n                      预测下一小时\r\n                    </Button>\r\n                  </Space>\r\n                }\r\n              >\r\n                <ReactECharts\r\n                  option={getChartOption()}\r\n                  style={{ height: '400px' }}\r\n                  onChartReady={(chart) => setChartInstance(chart)}\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Card title=\"交通流量分析\">\r\n                <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n                  <Statistic\r\n                    title=\"工作日平均流量\"\r\n                    value={analysis?.weekday_avg.toFixed(2)}\r\n                    suffix=\"辆/小时\"\r\n                  />\r\n                  <Statistic\r\n                    title=\"周末平均流量\"\r\n                    value={analysis?.weekend_avg.toFixed(2)}\r\n                    suffix=\"辆/小时\"\r\n                  />\r\n                  <Divider />\r\n                  <Statistic\r\n                    title=\"早高峰流量 (7:00-9:00)\"\r\n                    value={analysis?.morning_peak_avg.toFixed(2)}\r\n                    suffix=\"辆/小时\"\r\n                  />\r\n                  <Statistic\r\n                    title=\"晚高峰流量 (17:00-19:00)\"\r\n                    value={analysis?.evening_peak_avg.toFixed(2)}\r\n                    suffix=\"辆/小时\"\r\n                  />\r\n                  <Tag color=\"blue\" style={{ marginTop: 16 }}>\r\n                    日流量模式: {analysis?.daily_pattern}\r\n                  </Tag>\r\n                </Space>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Card title=\"24小时流量趋势\">\r\n                <ReactECharts\r\n                  option={getHourlyTrendOption()}\r\n                  style={{ height: '300px' }}\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          {prediction && (\r\n            <Card title=\"预测结果\">\r\n              <Row gutter={16}>\r\n                <Col span={8}>\r\n                  <Statistic\r\n                    title=\"预测时间\"\r\n                    value={prediction.timestamp}\r\n                    prefix={<ClockCircleOutlined />}\r\n                  />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Statistic\r\n                    title=\"预测流量\"\r\n                    value={prediction.predicted_value}\r\n                    precision={2}\r\n                    suffix=\"辆/小时\"\r\n                  />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Statistic\r\n                    title=\"相对当前变化\"\r\n                    value={((prediction.predicted_value - trafficData.values[trafficData.values.length - 1]) / trafficData.values[trafficData.values.length - 1] * 100).toFixed(2)}\r\n                    precision={2}\r\n                    prefix={prediction.predicted_value >= trafficData.values[trafficData.values.length - 1] ? <ArrowUpOutlined /> : <ArrowDownOutlined />}\r\n                    valueStyle={{ color: prediction.predicted_value >= trafficData.values[trafficData.values.length - 1] ? '#3f8600' : '#cf1322' }}\r\n                    suffix=\"%\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          )}\r\n        </Space>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO,EAAEC,GAAG,QAAQ,MAAM;AAC5G,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,SAASC,eAAe,EAAEC,iBAAiB,EAAEC,mBAAmB,EAAEC,YAAY,QAAQ,mBAAmB;AACzG,SAASC,mBAAmB,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/G,MAAM;EAAEC,MAAM;EAAEC;AAAQ,CAAC,GAAGxB,MAAM;AAgClC,MAAMyB,gBAAgB,GAAG,IAAI,CAAC,CAAC;;AAE/B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAc;IAAEkC,UAAU,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAC3F,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAwB,IAAI,CAAC;EACzE,MAAM,CAACsC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAe,IAAI,CAAC;EACtD,MAAM,CAACwC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAkB,IAAI,CAAC;EAC/D,MAAM,CAAC0C,OAAO,EAAEC,UAAU,CAAC,GAAG3C,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAAC4C,KAAK,EAAEC,QAAQ,CAAC,GAAG7C,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAAC8C,cAAc,EAAEC,iBAAiB,CAAC,GAAG/C,QAAQ,CAAO,IAAIgD,IAAI,CAAC,CAAC,CAAC;EACtE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlD,QAAQ,CAAM,IAAI,CAAC;EAE7D,MAAMmD,SAAS,GAAGlD,WAAW,CAAC,MAAM;IAClC,IAAI;MACF;MACA,MAAMmD,IAAI,GAAGjC,mBAAmB,CAAC,GAAG,CAAC;;MAErC;MACA,IAAI8B,aAAa,EAAE;QACjB,MAAMI,MAAM,GAAGJ,aAAa,CAACK,SAAS,CAAC,CAAC,CAACD,MAAM;QAC/CA,MAAM,CAAC,CAAC,CAAC,CAACD,IAAI,GAAGA,IAAI,CAACjB,MAAM;QAC5Bc,aAAa,CAACM,SAAS,CAAC;UACtBC,KAAK,EAAE;YACLJ,IAAI,EAAEA,IAAI,CAAClB;UACb,CAAC;UACDmB,MAAM,EAAEA;QACV,CAAC,EAAE;UACDI,SAAS,EAAE,IAAI;UACfC,iBAAiB,EAAE,IAAI;UACvBC,eAAe,EAAE;QACnB,CAAC,CAAC;MACJ;MAEA1B,cAAc,CAACmB,IAAI,CAAC;;MAEpB;MACA,MAAMQ,SAAS,GAAGvC,cAAc,CAAC+B,IAAI,CAAC;MACtCb,QAAQ,CAACqB,SAAS,CAAC;;MAEnB;MACA,MAAMC,YAAY,GAAGvC,iBAAiB,CAAC8B,IAAI,CAAC;MAC5CX,WAAW,CAACoB,YAAY,CAAC;MAEzBd,iBAAiB,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;MAC7BH,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,WAAW,CAAC;IACvB;EACF,CAAC,EAAE,CAACI,aAAa,CAAC,CAAC;EAEnB,MAAMc,aAAa,GAAGA,CAAA,KAAM;IAC1BpB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMqB,gBAAgB,GAAG5C,eAAe,CAACY,WAAW,CAAC;MACrDK,aAAa,CAAC2B,gBAAgB,CAAC;;MAE/B;MACA,MAAMC,OAAO,GAAG;QACd/B,UAAU,EAAE,CAAC,GAAGF,WAAW,CAACE,UAAU,EAAE8B,gBAAgB,CAACE,SAAS,CAAC;QACnE/B,MAAM,EAAE,CAAC,GAAGH,WAAW,CAACG,MAAM,EAAE6B,gBAAgB,CAACG,eAAe;MAClE,CAAC;MACDlC,cAAc,CAACgC,OAAO,CAAC;;MAEvB;MACA,MAAML,SAAS,GAAGvC,cAAc,CAAC4C,OAAO,CAAC;MACzC1B,QAAQ,CAACqB,SAAS,CAAC;;MAEnB;MACA,MAAMC,YAAY,GAAGvC,iBAAiB,CAAC2C,OAAO,CAAC;MAC/CxB,WAAW,CAACoB,YAAY,CAAC;MAEzBhB,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,YAAY,CAAC;MACtBiB,OAAO,CAAClB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED5C,SAAS,CAAC,MAAM;IACdoD,SAAS,CAAC,CAAC;IACX,MAAMiB,QAAQ,GAAGC,WAAW,CAAClB,SAAS,EAAExB,gBAAgB,CAAC;IACzD,OAAO,MAAM2C,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACjB,SAAS,CAAC,CAAC;EAEf,MAAMoB,cAAc,GAAGA,CAAA,MAAO;IAC5BC,KAAK,EAAE;MACLC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE,SAAS7B,cAAc,CAAC8B,kBAAkB,CAAC,CAAC;IACvD,CAAC;IACDC,OAAO,EAAE;MACPC,OAAO,EAAE,MAAM;MACfC,SAAS,EAAGC,MAAW,IAAK;QAC1B,MAAMC,IAAI,GAAG,IAAIjC,IAAI,CAACgC,MAAM,CAAC,CAAC,CAAC,CAACE,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;QAC3D,MAAMC,KAAK,GAAGJ,MAAM,CAAC,CAAC,CAAC,CAAC5B,IAAI;QAC5B,OAAO,MAAM6B,IAAI,WAAWG,KAAK,OAAO;MAC1C;IACF,CAAC;IACD5B,KAAK,EAAE;MACL6B,IAAI,EAAE,UAAU;MAChBjC,IAAI,EAAEpB,WAAW,CAACE,UAAU;MAC5BoD,SAAS,EAAE;QACTP,SAAS,EAAGK,KAAa,IAAK;UAC5B,OAAO,IAAIpC,IAAI,CAACoC,KAAK,CAAC,CAACR,kBAAkB,CAAC,CAAC;QAC7C;MACF;IACF,CAAC;IACDW,KAAK,EAAE;MACLF,IAAI,EAAE,OAAO;MACbG,IAAI,EAAE,YAAY;MAClB/B,SAAS,EAAE;IACb,CAAC;IACDJ,MAAM,EAAE,CACN;MACEmC,IAAI,EAAE,MAAM;MACZH,IAAI,EAAE,MAAM;MACZjC,IAAI,EAAEpB,WAAW,CAACG,MAAM;MACxBsD,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE;QACTC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE;MACT,CAAC;MACDC,SAAS,EAAE;QACTF,KAAK,EAAE;UACLN,IAAI,EAAE,QAAQ;UACdS,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE,CAAC;UACJC,EAAE,EAAE,CAAC;UACLC,EAAE,EAAE,CAAC;UACLC,UAAU,EAAE,CAAC;YACXC,MAAM,EAAE,CAAC;YACTR,KAAK,EAAE;UACT,CAAC,EAAE;YACDQ,MAAM,EAAE,CAAC;YACTR,KAAK,EAAE;UACT,CAAC;QACH;MACF,CAAC;MACDlC,SAAS,EAAE,IAAI;MACfC,iBAAiB,EAAE,IAAI;MACvBC,eAAe,EAAE;IACnB,CAAC,EACDvB,UAAU,GAAG;MACXoD,IAAI,EAAE,MAAM;MACZH,IAAI,EAAE,MAAM;MACZjC,IAAI,EAAE,CAAC,GAAGgD,KAAK,CAACpE,WAAW,CAACG,MAAM,CAACkE,MAAM,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,EAAElE,UAAU,CAAC+B,eAAe,CAAC;MACtFuB,SAAS,EAAE;QACTL,IAAI,EAAE,QAAQ;QACdM,KAAK,EAAE;MACT,CAAC;MACDY,MAAM,EAAE,QAAQ;MAChBC,UAAU,EAAE;IACd,CAAC,GAAG,CAAC,CAAC;EAEV,CAAC,CAAC;EAEF,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,EAACnE,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEoE,YAAY,GAAE,OAAO,CAAC,CAAC;IAEnC,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACvE,KAAK,CAACoE,YAAY,CAAC;IAC7C,MAAMvE,MAAM,GAAGyE,MAAM,CAACzE,MAAM,CAACG,KAAK,CAACoE,YAAY,CAAC;IAEhD,OAAO;MACLlC,KAAK,EAAE;QACLC,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAE;MACR,CAAC;MACDG,OAAO,EAAE;QACPC,OAAO,EAAE;MACX,CAAC;MACDtB,KAAK,EAAE;QACL6B,IAAI,EAAE,UAAU;QAChBjC,IAAI,EAAEuD,KAAK,CAACG,GAAG,CAACC,CAAC,IAAI,GAAGA,CAAC,KAAK,CAAC;QAC/BvB,IAAI,EAAE;MACR,CAAC;MACDD,KAAK,EAAE;QACLF,IAAI,EAAE,OAAO;QACbG,IAAI,EAAE;MACR,CAAC;MACDnC,MAAM,EAAE,CAAC;QACPD,IAAI,EAAEjB,MAAM;QACZkD,IAAI,EAAE,KAAK;QACXG,IAAI,EAAE,MAAM;QACZwB,SAAS,EAAE;UACTrB,KAAK,EAAE;QACT;MACF,CAAC;IACH,CAAC;EACH,CAAC;EAED,oBACEnE,OAAA,CAACtB,MAAM;IAAC+G,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACpC3F,OAAA,CAACC,MAAM;MAACwF,KAAK,EAAE;QAAEG,UAAU,EAAE,MAAM;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE;MAAgB,CAAE;MAAAL,QAAA,gBAC/H3F,OAAA;QAAIyF,KAAK,EAAE;UAAEtB,KAAK,EAAE,SAAS;UAAE8B,MAAM,EAAE;QAAE,CAAE;QAAAN,QAAA,EAAC;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDrG,OAAA,CAAChB,KAAK;QAAA2G,QAAA,eACJ3F,OAAA,CAACb,OAAO;UAAC6D,KAAK,EAAE,IAAI7C,gBAAgB,GAAC,IAAI,OAAQ;UAAAwF,QAAA,eAC/C3F,OAAA,CAACd,KAAK;YAACoH,MAAM,EAAC,YAAY;YAACrD,IAAI,eAC7BjD,OAAA,CAAChB,KAAK;cAAA2G,QAAA,gBACJ3F,OAAA,CAACN,YAAY;gBAAC6G,IAAI;cAAA;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,kCAEvB;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UACR;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACTrG,OAAA,CAACE,OAAO;MAACuF,KAAK,EAAE;QAAEI,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,GACjCvE,KAAK,iBAAIpB,OAAA,CAACf,KAAK;QAACuH,OAAO,EAAEpF,KAAM;QAACyC,IAAI,EAAC,OAAO;QAAC4C,QAAQ;QAAChB,KAAK,EAAE;UAAEiB,YAAY,EAAE;QAAG;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEtFrG,OAAA,CAAChB,KAAK;QAAC2H,SAAS,EAAC,UAAU;QAACC,IAAI,EAAC,OAAO;QAACnB,KAAK,EAAE;UAAErB,KAAK,EAAE;QAAO,CAAE;QAAAuB,QAAA,gBAChE3F,OAAA,CAACpB,GAAG;UAACiI,MAAM,EAAE,EAAG;UAAAlB,QAAA,gBACd3F,OAAA,CAACnB,GAAG;YAACiI,IAAI,EAAE,CAAE;YAAAnB,QAAA,eACX3F,OAAA,CAACrB,IAAI;cAAAgH,QAAA,eACH3F,OAAA,CAAClB,SAAS;gBACRkE,KAAK,EAAC,0BAAM;gBACZY,KAAK,EAAE9C,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAE;gBAC9BC,SAAS,EAAE,CAAE;gBACbC,MAAM,EAAC;cAAM;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNrG,OAAA,CAACnB,GAAG;YAACiI,IAAI,EAAE,CAAE;YAAAnB,QAAA,eACX3F,OAAA,CAACrB,IAAI;cAAAgH,QAAA,eACH3F,OAAA,CAAClB,SAAS;gBACRkE,KAAK,EAAC,0BAAM;gBACZY,KAAK,EAAE9C,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEqG,GAAI;gBAClBC,UAAU,EAAE;kBAAEjD,KAAK,EAAE;gBAAU,CAAE;gBACjCkD,MAAM,eAAErH,OAAA,CAACT,eAAe;kBAAA2G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBAC5Ba,MAAM,EAAC;cAAM;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNrG,OAAA,CAACnB,GAAG;YAACiI,IAAI,EAAE,CAAE;YAAAnB,QAAA,eACX3F,OAAA,CAACrB,IAAI;cAAAgH,QAAA,eACH3F,OAAA,CAAClB,SAAS;gBACRkE,KAAK,EAAC,0BAAM;gBACZY,KAAK,EAAE9C,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEwG,GAAI;gBAClBF,UAAU,EAAE;kBAAEjD,KAAK,EAAE;gBAAU,CAAE;gBACjCkD,MAAM,eAAErH,OAAA,CAACR,iBAAiB;kBAAA0G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBAC9Ba,MAAM,EAAC;cAAM;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNrG,OAAA,CAACnB,GAAG;YAACiI,IAAI,EAAE,CAAE;YAAAnB,QAAA,eACX3F,OAAA,CAACrB,IAAI;cAAAgH,QAAA,eACH3F,OAAA,CAAClB,SAAS;gBACRkE,KAAK,EAAC,kCAAS;gBACfY,KAAK,EAAE9C,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEyG,eAAgB;gBAC9BN,SAAS,EAAE,CAAE;gBACbG,UAAU,EAAE;kBAAEjD,KAAK,EAAE,EAAA7D,qBAAA,GAACQ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEyG,eAAe,cAAAjH,qBAAA,cAAAA,qBAAA,GAAI,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG;gBAAU,CAAE;gBAClF+G,MAAM,EAAE,EAAA9G,sBAAA,GAACO,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEyG,eAAe,cAAAhH,sBAAA,cAAAA,sBAAA,GAAI,CAAC,KAAK,CAAC,gBAAGP,OAAA,CAACT,eAAe;kBAAA2G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAAGrG,OAAA,CAACR,iBAAiB;kBAAA0G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACzFa,MAAM,EAAC;cAAG;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrG,OAAA,CAACpB,GAAG;UAACiI,MAAM,EAAE,EAAG;UAAAlB,QAAA,gBACd3F,OAAA,CAACnB,GAAG;YAACiI,IAAI,EAAE,EAAG;YAAAnB,QAAA,eACZ3F,OAAA,CAACrB,IAAI;cACHqE,KAAK,EAAC,kDAAU;cAChBwE,KAAK,eACHxH,OAAA,CAAChB,KAAK;gBAAA2G,QAAA,gBACJ3F,OAAA;kBAAMyF,KAAK,EAAE;oBAAEgC,QAAQ,EAAE,MAAM;oBAAEtD,KAAK,EAAE;kBAAO,CAAE;kBAAAwB,QAAA,GAAC,4BAC1C,EAACrE,cAAc,CAAC8B,kBAAkB,CAAC,CAAC;gBAAA;kBAAA8C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtC,CAAC,eACPrG,OAAA,CAACjB,MAAM;kBAAC8E,IAAI,EAAC,SAAS;kBAAC6D,OAAO,EAAEnF,aAAc;kBAACrB,OAAO,EAAEA,OAAQ;kBAAAyE,QAAA,EAAC;gBAEjE;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CACR;cAAAV,QAAA,eAED3F,OAAA,CAACV,YAAY;gBACXqI,MAAM,EAAE5E,cAAc,CAAC,CAAE;gBACzB0C,KAAK,EAAE;kBAAEmC,MAAM,EAAE;gBAAQ,CAAE;gBAC3BC,YAAY,EAAGC,KAAK,IAAKpG,gBAAgB,CAACoG,KAAK;cAAE;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNrG,OAAA,CAACnB,GAAG;YAACiI,IAAI,EAAE,CAAE;YAAAnB,QAAA,eACX3F,OAAA,CAACrB,IAAI;cAACqE,KAAK,EAAC,sCAAQ;cAAA2C,QAAA,eAClB3F,OAAA,CAAChB,KAAK;gBAAC2H,SAAS,EAAC,UAAU;gBAAClB,KAAK,EAAE;kBAAErB,KAAK,EAAE;gBAAO,CAAE;gBAAAuB,QAAA,gBACnD3F,OAAA,CAAClB,SAAS;kBACRkE,KAAK,EAAC,4CAAS;kBACfY,KAAK,EAAE5C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE+G,WAAW,CAACf,OAAO,CAAC,CAAC,CAAE;kBACxCE,MAAM,EAAC;gBAAM;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd,CAAC,eACFrG,OAAA,CAAClB,SAAS;kBACRkE,KAAK,EAAC,sCAAQ;kBACdY,KAAK,EAAE5C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEgH,WAAW,CAAChB,OAAO,CAAC,CAAC,CAAE;kBACxCE,MAAM,EAAC;gBAAM;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd,CAAC,eACFrG,OAAA,CAACZ,OAAO;kBAAA8G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACXrG,OAAA,CAAClB,SAAS;kBACRkE,KAAK,EAAC,4CAAmB;kBACzBY,KAAK,EAAE5C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEiH,gBAAgB,CAACjB,OAAO,CAAC,CAAC,CAAE;kBAC7CE,MAAM,EAAC;gBAAM;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd,CAAC,eACFrG,OAAA,CAAClB,SAAS;kBACRkE,KAAK,EAAC,8CAAqB;kBAC3BY,KAAK,EAAE5C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEkH,gBAAgB,CAAClB,OAAO,CAAC,CAAC,CAAE;kBAC7CE,MAAM,EAAC;gBAAM;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd,CAAC,eACFrG,OAAA,CAACX,GAAG;kBAAC8E,KAAK,EAAC,MAAM;kBAACsB,KAAK,EAAE;oBAAE0C,SAAS,EAAE;kBAAG,CAAE;kBAAAxC,QAAA,GAAC,kCACnC,EAAC3E,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEoH,aAAa;gBAAA;kBAAAlC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrG,OAAA,CAACpB,GAAG;UAACiI,MAAM,EAAE,EAAG;UAAAlB,QAAA,eACd3F,OAAA,CAACnB,GAAG;YAACiI,IAAI,EAAE,EAAG;YAAAnB,QAAA,eACZ3F,OAAA,CAACrB,IAAI;cAACqE,KAAK,EAAC,wCAAU;cAAA2C,QAAA,eACpB3F,OAAA,CAACV,YAAY;gBACXqI,MAAM,EAAE1C,oBAAoB,CAAC,CAAE;gBAC/BQ,KAAK,EAAE;kBAAEmC,MAAM,EAAE;gBAAQ;cAAE;gBAAA1B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAELzF,UAAU,iBACTZ,OAAA,CAACrB,IAAI;UAACqE,KAAK,EAAC,0BAAM;UAAA2C,QAAA,eAChB3F,OAAA,CAACpB,GAAG;YAACiI,MAAM,EAAE,EAAG;YAAAlB,QAAA,gBACd3F,OAAA,CAACnB,GAAG;cAACiI,IAAI,EAAE,CAAE;cAAAnB,QAAA,eACX3F,OAAA,CAAClB,SAAS;gBACRkE,KAAK,EAAC,0BAAM;gBACZY,KAAK,EAAEhD,UAAU,CAAC8B,SAAU;gBAC5B2E,MAAM,eAAErH,OAAA,CAACP,mBAAmB;kBAAAyG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAE;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNrG,OAAA,CAACnB,GAAG;cAACiI,IAAI,EAAE,CAAE;cAAAnB,QAAA,eACX3F,OAAA,CAAClB,SAAS;gBACRkE,KAAK,EAAC,0BAAM;gBACZY,KAAK,EAAEhD,UAAU,CAAC+B,eAAgB;gBAClCsE,SAAS,EAAE,CAAE;gBACbC,MAAM,EAAC;cAAM;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNrG,OAAA,CAACnB,GAAG;cAACiI,IAAI,EAAE,CAAE;cAAAnB,QAAA,eACX3F,OAAA,CAAClB,SAAS;gBACRkE,KAAK,EAAC,sCAAQ;gBACdY,KAAK,EAAE,CAAC,CAAChD,UAAU,CAAC+B,eAAe,GAAGnC,WAAW,CAACG,MAAM,CAACH,WAAW,CAACG,MAAM,CAACkE,MAAM,GAAG,CAAC,CAAC,IAAIrE,WAAW,CAACG,MAAM,CAACH,WAAW,CAACG,MAAM,CAACkE,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,EAAEmC,OAAO,CAAC,CAAC,CAAE;gBAC/JC,SAAS,EAAE,CAAE;gBACbI,MAAM,EAAEzG,UAAU,CAAC+B,eAAe,IAAInC,WAAW,CAACG,MAAM,CAACH,WAAW,CAACG,MAAM,CAACkE,MAAM,GAAG,CAAC,CAAC,gBAAG7E,OAAA,CAACT,eAAe;kBAAA2G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAAGrG,OAAA,CAACR,iBAAiB;kBAAA0G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACtIe,UAAU,EAAE;kBAAEjD,KAAK,EAAEvD,UAAU,CAAC+B,eAAe,IAAInC,WAAW,CAACG,MAAM,CAACH,WAAW,CAACG,MAAM,CAACkE,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,GAAG;gBAAU,CAAE;gBAC/HqC,MAAM,EAAC;cAAG;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEb,CAAC;AAAChG,EAAA,CApWID,GAAa;AAAAiI,EAAA,GAAbjI,GAAa;AAsWnB,eAAeA,GAAG;AAAC,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}